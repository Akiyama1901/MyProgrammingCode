词法分析的原理

词法分析是编译程序进行编译时第一个要进行的任务，主要是对源程序进行编译预处理之后，对整个源程序进行分解，分解成一个个单词，这些单词有且只有五类，分别时标识符、关键字（保留字）、常数、运算符、界符。以便为之后的语法分析和语义分析做准备。
词法分析面对的对象是单个的字符，目的是把它们组成有效的单词（字符串）；而语法的分析则是利用词法分析的结果作为输入来分析是否符合语法规则并且进行语法制导下的语义分析，最后产生四元组（中间代码），进行优化之后最终生成目标代码。由此可见词法分析是所有后续工作的基础，如果这一步出错，就会对下文造成不可挽回的影响。因此在进行词法分析的时候一定要定义好这五种符号的集合。
第一类：关键字
第二类：标识符   letter（letter|digit）*无穷集
第三类：常数  （digit）+无穷集
第四类：分界符
第五类：运算符
最后输出的一个结果是一个二元组，所有识别出的单词都用两个字节的等长表示，称为内部码。第一个字节为 t ， 第二个字节为 i 。 t 为单词的种类。关键字的 t=１；分界符的 t=２；算术运算符的 t=３；关系运算符的 t=４；无符号数的 t=５；标识符的 t=６。i 为该单词在各自表中的指 针或内部码值。表1 为关键字表；表2为分界符表；表 3 为算术运算符的 i 值； 表4为关系运算符的 i 值。
词法分析将从文件中读入的一个个的字符，根据一定的构词规则，识别出各类有用的单词。
当读入的第一个字符是字母时（IsLetter（char c）），开始识别标识符或关键字，边拼写边从缓冲区读入下一符号，当读入一个非字母符号时，标识符识别完成，但已经多读入一个符号，所以调用文件操作函数fseek(fp,-1,1),回退一个字符。
其后查找关键字表，判断拼出的符号串是否为关键字。若是关键字，则在文件中写入这个单词，以及通过二元组写出这个单词的种类和单词的指针或内部码（例：begin  (1,1)）。
  否则识别的单词就是标识符，然后将该标识符与标识符表（mark）中的单词比较，若该标识符存在标识符表中，就在文件中写入该标识符，以及通过二元组写出这个单词的种类和在标识符表中所占的位数（例：IsLetter （6,q））；若该标识符不存在标识符表中，就在标识符表中插入该标识符，然后在文件中写入该标识符，以及通过二元组写出这个单词的种类和在标识符表中第几位（例：IsDigit（6,line+1））。
当读入的第一个字符是数字时，开始识别整数或实数，边拼写边读入下一个字符，当遇到其他非数字符号时，数字常数拼写完毕，同时也要调用文件操作函数fseek(fp,-1,1),回退一个字符。
当读入的第一个字符既不是字母也不是数字时，需要去判断该字符是分界符、算术运算符还是关系运算符，还要通过一个二元组，输出它的种类和内部码值。